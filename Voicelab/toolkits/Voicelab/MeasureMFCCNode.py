from Voicelab.pipeline.Node import Node
from parselmouth.praat import call
from Voicelab.toolkits.Voicelab.VoicelabNode import VoicelabNode


# MANIPULATE FORMANTS NODE
# WARIO pipeline node for manipulating voice formants.
# ARGUMENTS
# 'voice'   : sound file generated by parselmouth praat
# 'unit'    :
# 'factor'  :
# RETURNS
# 'manipulated_voice'   : sound file of the original voice with modifications

commmand_name = "Measure MFCC"

class MeasureMFCCNode(VoicelabNode):
    def __init__(self, *args, **kwargs):
        """
        Args:
            *args:
            **kwargs:
        """
        super().__init__(*args, **kwargs)

        # initialize with default arguments
        self.args = {

        }

        # process: WARIO hook called once for each voice file.
    def process(self):
        sound = self.args["voice"]
        try:
            mfcc = sound.to_mfcc(number_of_coefficients=24)
            return {
                "mfcc": mfcc.extract_features().values.tolist()
            }
        except:
            return{
                "mfcc": []
            }

